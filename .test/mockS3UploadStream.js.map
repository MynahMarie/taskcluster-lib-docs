{
  "version": 3,
  "sources": [
    "mockS3UploadStream.js"
  ],
  "names": [
    "Writable",
    "require",
    "MockClient",
    "client",
    "prototype",
    "upload",
    "obj",
    "stream",
    "_write",
    "chunk",
    "encoding",
    "done",
    "emit",
    "end",
    "module",
    "exports"
  ],
  "mappings": ";;AAAA,IAAMA,WAAWC,QAAQ,QAAR,EAAkBD,QAAnC;;AAEA,SAASE,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,MAAI,gBAAgBD,UAAhB,KAA+B,KAAnC,EAA0C;AACxC,WAAO,IAAIA,UAAJ,CAAeC,MAAf,CAAP;AACD;AACF;;AAEDD,WAAWE,SAAX,CAAqBC,MAArB,GAA8B,UAASC,GAAT,EAAc;;AAE1C,MAAIC,SAAS,IAAIP,QAAJ,EAAb;;AAEAO,SAAOC,MAAP,GAAgB,UAASC,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;AAC9CJ,WAAOK,IAAP,CAAY,MAAZ,EAAoB,iDAApB;AACA,QAAI,CAACH,KAAL,EAAY;AACVF,aAAOK,IAAP,CAAY,OAAZ,EAAqB,yCAArB;AAED;AACDD;AACD,GAPD;;AASAJ,SAAOM,GAAP,GAAa,UAASJ,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;AAC3CJ,WAAOK,IAAP,CAAY,UAAZ,EAAwB,0CAAxB;AACD,GAFD;;AAIA,SAAOL,MAAP;AACD,CAlBD;;AAoBAO,OAAOC,OAAP,GAAiBb,UAAjB",
  "file": "mockS3UploadStream.js",
  "sourceRoot": "../test",
  "sourcesContent": [
    "const Writable = require('stream').Writable;\n\nfunction MockClient(client) {\n  if (this instanceof MockClient === false) {\n    return new MockClient(client);\n  }\n}\n\nMockClient.prototype.upload = function(obj) {\n\n  let stream = new Writable();\n\n  stream._write = function(chunk, encoding, done) {\n    stream.emit('part', 'Fake upload for testing purposes is in progress');\n    if (!chunk) {\n      stream.emit('error', 'Nothing in is being piped in the stream');\n\n    }\n    done();\n  };\n\n  stream.end = function(chunk, encoding, done) {\n    stream.emit('uploaded', 'Fake upload for testing purposes is done');\n  };\n\n  return stream;\n};\n\nmodule.exports = MockClient;\n"
  ]
}
